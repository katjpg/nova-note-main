{
  "nodes": [
    {
      "id": "Memory Load",
      "type": "Concept"
    },
    {
      "id": "Center-embedded sentences",
      "type": "Topic"
    },
    {
      "id": "Processing difficulty",
      "type": "Concept"
    },
    {
      "id": "Single embedding: Easy - Double embedding: Challenging - Triple embedding: Nearly impossible",
      "type": "Evidence"
    },
    {
      "id": "python",
      "type": "Topic"
    },
    {
      "id": "The rat [the cat [the dog chased] bit] ran",
      "type": "Evidence"
    },
    {
      "id": "embedding depth",
      "type": "Concept"
    },
    {
      "id": "Today's Lab Demo",
      "type": "Method"
    },
    {
      "id": "Priming Effects",
      "type": "Topic"
    },
    {
      "id": "GPT architecture",
      "type": "Method"
    },
    {
      "id": "Python data analysis",
      "type": "Method"
    },
    {
      "id": "Modern Approaches",
      "type": "Topic"
    },
    {
      "id": "Key Terms to Review",
      "type": "Topic"
    },
    {
      "id": "Cognitive rehabilitation",
      "type": "Method"
    },
    {
      "id": "Lab Requirements",
      "type": "Topic"
    },
    {
      "id": "Semantic priming",
      "type": "Concept"
    },
    {
      "id": "Install required software",
      "type": "Method"
    },
    {
      "id": "Statistical learning mechanisms",
      "type": "Concept"
    },
    {
      "id": "ERP Components",
      "type": "Topic"
    },
    {
      "id": "Semantic Networks",
      "type": "Topic"
    },
    {
      "id": "Key Applications",
      "type": "Topic"
    },
    {
      "id": "BERT",
      "type": "Method"
    },
    {
      "id": "Transformers",
      "type": "Method"
    },
    {
      "id": "Clinical Relevance",
      "type": "Topic"
    },
    {
      "id": "N400",
      "type": "Concept"
    },
    {
      "id": "Language understanding",
      "type": "Concept"
    },
    {
      "id": "Syntactic parsing",
      "type": "Concept"
    },
    {
      "id": "Spreading Activation",
      "type": "Method"
    },
    {
      "id": "Personal Reminders",
      "type": "Topic"
    },
    {
      "id": "Treatment Approaches",
      "type": "Topic"
    },
    {
      "id": "P600",
      "type": "Concept"
    },
    {
      "id": "Aphasia treatment",
      "type": "Method"
    },
    {
      "id": "Questions for Office Hours",
      "type": "Topic"
    },
    {
      "id": "Brain Regions",
      "type": "Topic"
    },
    {
      "id": "Anterior Cingulate",
      "type": "Concept"
    },
    {
      "id": "Prefrontal Cortex",
      "type": "Concept"
    },
    {
      "id": "Parietal Lobe",
      "type": "Concept"
    },
    {
      "id": "experimental_group",
      "type": "Concept"
    },
    {
      "id": "final paper",
      "type": "Topic"
    },
    {
      "id": "p_value",
      "type": "Concept"
    },
    {
      "id": "control_group",
      "type": "Concept"
    },
    {
      "id": "0.023",
      "type": "Evidence"
    },
    {
      "id": "Observations",
      "type": "Concept"
    },
    {
      "id": "5.8",
      "type": "Evidence"
    },
    {
      "id": "7.2",
      "type": "Evidence"
    },
    {
      "id": "Long-term potentiation (LTP) strengthens connections between neurons through repeated activation",
      "type": "Evidence"
    },
    {
      "id": "python",
      "type": "Method"
    },
    {
      "id": "Learning Mechanisms",
      "type": "Topic"
    },
    {
      "id": "Computational Models",
      "type": "Topic"
    },
    {
      "id": "How neural networks adjust connection weights to minimize error",
      "type": "Evidence"
    },
    {
      "id": "Synaptic Plasticity",
      "type": "Concept"
    },
    {
      "id": "Input Layer",
      "type": "Concept"
    },
    {
      "id": "Unsupervised Learning",
      "type": "Concept"
    },
    {
      "id": "Output Layer",
      "type": "Concept"
    },
    {
      "id": "Reinforcement Learning",
      "type": "Concept"
    },
    {
      "id": "Backpropagation",
      "type": "Concept"
    },
    {
      "id": "Hidden Layer(s)",
      "type": "Concept"
    },
    {
      "id": "Key Concept",
      "type": "Topic"
    },
    {
      "id": "Supervised Learning",
      "type": "Concept"
    },
    {
      "id": "Basic Neural Network Components",
      "type": "Topic"
    },
    {
      "id": "activation",
      "type": "Concept"
    },
    {
      "id": "1 if activation > 0 else 0",
      "type": "Concept"
    },
    {
      "id": "perceptron",
      "type": "Method"
    },
    {
      "id": "sum(x*w for x,w in zip(input_vector, weights))",
      "type": "Concept"
    },
    {
      "id": "input_vector, weights",
      "type": "Concept"
    },
    {
      "id": "Presentation prep",
      "type": "Method"
    },
    {
      "id": "Practice implementing basic perceptron",
      "type": "Method"
    },
    {
      "id": "Review backpropagation math",
      "type": "Method"
    },
    {
      "id": "Study Group Meeting",
      "type": "Concept"
    },
    {
      "id": "backpropagation math",
      "type": "Concept"
    },
    {
      "id": "Data collection",
      "type": "Method"
    },
    {
      "id": "neural network simulator",
      "type": "Concept"
    },
    {
      "id": "Complexity emerges from simple rules",
      "type": "Theory"
    },
    {
      "id": "class discussion highlight",
      "type": "Evidence"
    },
    {
      "id": "Neural network implementations",
      "type": "Topic"
    },
    {
      "id": "Analysis",
      "type": "Method"
    },
    {
      "id": "basic perceptron",
      "type": "Concept"
    },
    {
      "id": "Download neural network simulator",
      "type": "Method"
    },
    {
      "id": "Timeline",
      "type": "Concept"
    }
  ],
  "edges": [
    {
      "source": "Memory Load",
      "target": "Center-embedded sentences",
      "type": "RELATES_TO"
    },
    {
      "source": "Center-embedded sentences",
      "target": "The rat [the cat [the dog chased] bit] ran",
      "type": "DESCRIBES"
    },
    {
      "source": "Processing difficulty",
      "target": "embedding depth",
      "type": "RELATES_TO"
    },
    {
      "source": "Processing difficulty",
      "target": "Single embedding: Easy - Double embedding: Challenging - Triple embedding: Nearly impossible",
      "type": "SUPPORTS"
    },
    {
      "source": "Today's Lab Demo",
      "target": "python",
      "type": "RELATES_TO"
    },
    {
      "source": "N400",
      "target": "ERP Components",
      "type": "PART_OF"
    },
    {
      "source": "P600",
      "target": "ERP Components",
      "type": "PART_OF"
    },
    {
      "source": "Semantic Networks",
      "target": "Spreading Activation",
      "type": "DESCRIBES"
    },
    {
      "source": "Semantic priming",
      "target": "Priming Effects",
      "type": "PART_OF"
    },
    {
      "source": "Transformers",
      "target": "Modern Approaches",
      "type": "PART_OF"
    },
    {
      "source": "BERT",
      "target": "Modern Approaches",
      "type": "PART_OF"
    },
    {
      "source": "GPT architecture",
      "target": "Modern Approaches",
      "type": "PART_OF"
    },
    {
      "source": "Language understanding",
      "target": "Key Applications",
      "type": "PART_OF"
    },
    {
      "source": "Aphasia treatment",
      "target": "Clinical Relevance",
      "type": "PART_OF"
    },
    {
      "source": "Cognitive rehabilitation",
      "target": "Treatment Approaches",
      "type": "PART_OF"
    },
    {
      "source": "Syntactic parsing",
      "target": "Key Terms to Review",
      "type": "PART_OF"
    },
    {
      "source": "Statistical learning mechanisms",
      "target": "Questions for Office Hours",
      "type": "RELATES_TO"
    },
    {
      "source": "Python data analysis",
      "target": "Personal Reminders",
      "type": "SUPPORTS"
    },
    {
      "source": "Install required software",
      "target": "Lab Requirements",
      "type": "PART_OF"
    },
    {
      "source": "Brain Regions",
      "target": "Prefrontal Cortex",
      "type": "PART_OF"
    },
    {
      "source": "Brain Regions",
      "target": "Parietal Lobe",
      "type": "PART_OF"
    },
    {
      "source": "Brain Regions",
      "target": "Anterior Cingulate",
      "type": "PART_OF"
    },
    {
      "source": "control_group",
      "target": "7.2",
      "type": "RELATES_TO"
    },
    {
      "source": "experimental_group",
      "target": "5.8",
      "type": "RELATES_TO"
    },
    {
      "source": "p_value",
      "target": "0.023",
      "type": "RELATES_TO"
    },
    {
      "source": "Observations",
      "target": "final paper",
      "type": "SUPPORTS"
    },
    {
      "source": "Basic Neural Network Components",
      "target": "Input Layer",
      "type": "PART_OF"
    },
    {
      "source": "Basic Neural Network Components",
      "target": "Hidden Layer(s)",
      "type": "PART_OF"
    },
    {
      "source": "Basic Neural Network Components",
      "target": "Output Layer",
      "type": "PART_OF"
    },
    {
      "source": "Synaptic Plasticity",
      "target": "Long-term potentiation (LTP) strengthens connections between neurons through repeated activation",
      "type": "DESCRIBES"
    },
    {
      "source": "Learning Mechanisms",
      "target": "Supervised Learning",
      "type": "PART_OF"
    },
    {
      "source": "Learning Mechanisms",
      "target": "Unsupervised Learning",
      "type": "PART_OF"
    },
    {
      "source": "Learning Mechanisms",
      "target": "Reinforcement Learning",
      "type": "PART_OF"
    },
    {
      "source": "Key Concept",
      "target": "Backpropagation",
      "type": "DESCRIBES"
    },
    {
      "source": "Backpropagation",
      "target": "How neural networks adjust connection weights to minimize error",
      "type": "DESCRIBES"
    },
    {
      "source": "Computational Models",
      "target": "python",
      "type": "RELATES_TO"
    },
    {
      "source": "perceptron",
      "target": "input_vector, weights",
      "type": "DESCRIBES"
    },
    {
      "source": "activation",
      "target": "perceptron",
      "type": "PART_OF"
    },
    {
      "source": "sum(x*w for x,w in zip(input_vector, weights))",
      "target": "activation",
      "type": "DESCRIBES"
    },
    {
      "source": "1 if activation > 0 else 0",
      "target": "perceptron",
      "type": "DESCRIBES"
    },
    {
      "source": "Data collection",
      "target": "Timeline",
      "type": "PART_OF"
    },
    {
      "source": "Analysis",
      "target": "Timeline",
      "type": "PART_OF"
    },
    {
      "source": "Presentation prep",
      "target": "Timeline",
      "type": "PART_OF"
    },
    {
      "source": "neural network simulator",
      "target": "Download neural network simulator",
      "type": "DESCRIBES"
    },
    {
      "source": "basic perceptron",
      "target": "Practice implementing basic perceptron",
      "type": "DESCRIBES"
    },
    {
      "source": "backpropagation math",
      "target": "Review backpropagation math",
      "type": "DESCRIBES"
    },
    {
      "source": "Complexity emerges from simple rules",
      "target": "class discussion highlight",
      "type": "SUPPORTS"
    },
    {
      "source": "Neural network implementations",
      "target": "Study Group Meeting",
      "type": "RELATES_TO"
    }
  ]
}